openapi: 3.0.0
info:
  description: This is the swagger describing Organization API exposed by HubEE.
  version: 1.1.0
  title: Organization
x-wso2-basePath: /referential/v1
x-wso2-production-endpoints: "#/x-wso2-endpoints/microservice"
x-wso2-endpoints:
  - microservice:
      urls:
        - https://microservice/referential/v1
servers:
  - url: 'https://apirecettenhube.imfr.cgi.com/referential/v1'
    description: Serveur REC CGI
security:
  - dinum_auth: []
paths:
  /organizations:
    parameters:
      - $ref: '#/components/parameters/editorName'
      - $ref: '#/components/parameters/applicationName'
      - $ref: '#/components/parameters/softwareVersion'
      - $ref: '#/components/parameters/query_organizationType'
      - $ref: '#/components/parameters/query_organizationCompanyRegister'
    get:
      tags:
        - Organization
      summary: Find organizations
      operationId: getOrganizations
      description: "This method allows the retrieve of all organizations.<br/> This method is accessible by <b>ADMIN</b>"
      security: 
        - dinum_auth: 
          - ADMIN
      parameters:
      - name: offSet
        in: query
        description: Offset
        required: false
        example: 0
        schema:
          type: integer
      - name: maxResult
        in: query
        description: Max result
        required: false
        example: 25
        schema:
          type: integer
      - name: orderBy
        in: query
        description: "To order by 'companyRegister' it is necessary to put 'company_register'. <br> Possible values are : code , type , name, company_register, branche_code, country, postal_code, territory, email, phone_number, status, create_date_time"
        example: company_register
        required: false
        schema:
          type: string
          maxLength: 20          
      responses:
        "200":
          description: successful operation
          content:
            application/json:
             schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example1:
                  value:
                    errors:
                      - code: 400
                        message: bad request
        "404":
          description: Organization is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example1:
                  value:
                    errors:
                      - code: 404
                        message: Organization is not found
    post:
      tags:
        - Organization
      summary: create a new organization
      description: "This method allows the creation of an organization.<br/> This method is accessible by <b>ADMIN and SUBCRT</b>"
      security: 
        - dinum_auth: 
          - ADMIN
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Organization'
        description: Organization object that needs to be created

      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example1:
                  value:
                    errors:
                      - code: 400
                        message: bad request
        "500":
          description: Internal server
  /organizations/{id}:
    parameters:
      - $ref: '#/components/parameters/path_organizationID'
      - $ref: '#/components/parameters/editorName'
      - $ref: '#/components/parameters/applicationName'
      - $ref: '#/components/parameters/softwareVersion'
    put:
      tags:
        - Organization
      summary: update an existing organization
      description: "This method allows the modification of an organization by its identifier.<br/> This method is accessible by <b>ADMIN</b>"
      operationId: updateOrganization
      security: 
        - dinum_auth: 
          - ADMIN
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
        description: Organization object that needs to be updated

      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example1:
                  value:
                    errors:
                      - code: 400
                        message: bad request
        "500":
          description: Internal server
    get:
      tags:
        - Organization
      summary: Find an existing organization
      description: "This method allows the creation of an organization.<br/> This method is accessible by <b>ADMIN and SUBCRT</b>"
      operationId: deleteOrganization
      security: 
        - dinum_auth: 
          - ADMIN
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example1:
                  value:
                    errors:
                      - code: 400
                        message: bad request
        "404":
          description: Organization is not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      properties:
                        code:
                          type: number
                          example: "404"
                        message:
                          type: string
                          example: Organization is not found
        "500":
          description: Internal server
components:

  securitySchemes:
    dinum_auth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /token
          scopes:
            ADMIN: admin
            SUBCRT: Subscription creator 

  parameters:
    path_organizationID:
      in: path
      name: id
      required: true
      description: "Identifiant de l'organisation, composé de [Type]-[CompanyRegister]-[BranchCode]"
      example: "SI-22770001000019-77372"
      schema:
        type: string
        pattern: '^\w{1,20}-[0-9]{14}-\w{1,10}$'
    query_organizationType:
      in: query
      name: type
      required: false
      description: "Organization type : OSL, SI, ADMIN"
      example: SI     
      schema:
        type: string
    query_organizationCompanyRegister:    
      in: query
      name: company_register
      required: false
      description: Company register
      example: 22770001000019
      schema:
        type: string        
    editorName:  
      name: editorName
      in: header
      description: Editor name
      required: false
      schema:
        type: string
        maxLength: 50
    applicationName:  
      name: applicationName
      in: header
      description: Application name
      required: false
      schema:
        type: string
        maxLength: 50
    softwareVersion:
      name: softwareVersion
      in: header
      description: Software version
      required: false
      schema:
        type: string
        maxLength: 50  
        
  schemas:

    Organization:
      type: object
      properties:
        type:
          type: string
          maxLength: 20
          description: "Type d'organisation : OSL, SI, Admin (DINUM)"
          example: SI
        companyRegister:
          type: string
          maxLength: 14
          description: Code SIRET de l'organisation
          example: 22770001000019
          pattern: '[0-9]{14}'
        branchCode:
          type: string
          maxLength: 10
          description: Code guichet de l'organisation
          example: 77372      
        name: 
          type: string
          example: Direction de l'Information légale et Administrative
          maxLength: 100
          description: Nom de l'organisation (raison sociale)
        code:
          type: string
          maxLength: 10
          example: DILA
          description: Code / Acronyme de l'organisation
          nullable: true
        country:
          type: string
          maxLength: 100
          example: France
          description: Pays de l'organisation
          nullable: true
        postalCode:
          type: string
          maxLength: 100
          example: 75015
          description: Code postal de l'organisation
        territory:
          type: string
          example: PARIS
          maxLength: 255
          description: Nom du département
        email:
          type: string
          format: email
          description: Email de l'organisation
          example: admin@admin.com
          nullable: true
        phoneNumber:
          type: string
          nullable: true
          pattern: ^\+[0-9]{10,20}|[0-9]{10,20}
          example: '00658475847'
          description: Numéro de téléphone de l'organisation
        status:
          type: string
          maxLength: 20
          example: Actif
          description: Statut de l'organisation
        createDateTime:
          type: string
          format: date-time
          readOnly: true
          description: Date de création
        updateDateTime:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Date de dernière modification
      required:
        - name
        - territory
        - postalCode
        - status
        - createDateTime
        - type
        - companyRegister
        - branchCode        
        
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            properties:
              code:
                type: number
              message:
                type: string